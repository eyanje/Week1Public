library(ggplot2)
install.packages("tidyverse")
install.packages("ggplot2")
library(tidyverse)
library(ggplot2)
.packages <- c("tidyverse", "ggplot2")
# Install CRAN packages (if not already installed)
.inst <- .packages %in% installed.packages()
if(length(.packages[!.inst]) > 0) install.packages(.packages[!.inst])
# Load packages into session
lapply(.packages, library, character.only=TRUE)
## Read the csv file
df <- read_csv("https://raw.githubusercontent.com/jbrownlee/Datasets/master/pima-indians-diabetes.data.csv", col_names = c("preg", "plas", "pres", "skin", "test", "mass", "predi", "age", "class"))
## the type
class(df)
# number of rows
nrow(df)
sprintf("Number of rows:%d", nrow(df))
# number of columns
ncol (df)
sprintf("Number of columns:%d", ncol(df))
## get the colnames
colnames(df)
# top x rows
head(df) ## 6 rows is the default
head(df, 10) ## gives you the top 10 rows
glimpse(df) ## from tidyverse
## get the first row
df[1,]
## get the 3rd column for the first 10 rows
df[1:10, 3]
# get columns 1 through 5 for all rows
df[, 1:5]
# you can also use column names to retrieve
## get the 3rd (pres) column for the first 10 rows
df[1:10, "pres"]
## to assign to a new variable
a <- df [,1:5]
head(a)
## get the first row only
df %>%
slice(1)
## get the 3rd column of the first 10 rows (using column position)
df %>%
slice (1:10) %>%
select (3)
# get columns 1 through 5 for all rows
df %>%
select (1:5)
# using column names (the more widely used method)
## get the 3rd (pres) column for the first 10 rows
df %>%
slice (1:10) %>%
select (pres)
# multiple columns
df %>%
slice (1:10) %>%
select (preg, pres, class)
# assignment works the same way
a <- df %>%
slice (1:10) %>%
select (preg, pres, class)
df %>%
filter(age > 39 & preg > 2)
## you can assign this to another data frame
mydf <- df %>%
filter(age > 39 & preg > 2)
head(mydf)
## Find the mean of a column
mean(df$preg) # mean number of pregnancies
sd (df$preg) # standard deviation
quantile (df$preg)
## doing it across mulitple columns
df %>%
summarize(mean_preg = mean (preg),
mean_plas = mean (plas),
mean_pres = mean (pres))
mydf %>%
select (everything()) %>%
summarise_all(funs(sum(is.na(.))))
nh_df <- readRDS ("~/Downloads/small_subset.rds")
library(ggplot2)
library(tidyverse)
## subset the data to make it easier to work with
df <- bigData %>%
filter(SDDSRVYR %in% c(5))
install.packages(c("ggplot2", "tidyverse"))
# Install CRAN packages (if not already installed)
.inst <- .packages %in% installed.packages()
```{r}
.packages <- c("tidyverse", "ggplot2")
# Install CRAN packages (if not already installed)
.inst <- .packages %in% installed.packages()
if(length(.packages[!.inst]) > 0) install.packages(.packages[!.inst])
# Load packages into session
lapply(.packages, library, character.only=TRUE)
## Read the csv file
df <- read_csv("https://raw.githubusercontent.com/jbrownlee/Datasets/master/pima-indians-diabetes.data.csv", col_names = c("preg", "plas", "pres", "skin", "test", "mass", "predi", "age", "class"))
## the type
class(df)
glimpse(df) ## from tidyverse
.packages <- c("tidyverse", "ggplot2")
# Install CRAN packages (if not already installed)
.inst <- .packages %in% installed.packages()
if(length(.packages[!.inst]) > 0) install.packages(.packages[!.inst])
# Load packages into session
lapply(.packages, library, character.only=TRUE)
## Read the csv file
df <- read_csv("https://raw.githubusercontent.com/jbrownlee/Datasets/master/pima-indians-diabetes.data.csv", col_names = c("preg", "plas", "pres", "skin", "test", "mass", "predi", "age", "class"))
## the type
class(df)
# number of rows
nrow(df)
sprintf("Number of rows:%d", nrow(df))
# number of columns
ncol (df)
sprintf("Number of columns:%d", ncol(df))
## get the colnames
colnames(df)
# top x rows
head(df) ## 6 rows is the default
head(df, 10) ## gives you the top 10 rows
glimpse(df) ## from tidyverse
## get the first row
df[1,]
## get the 3rd column for the first 10 rows
df[1:10, 3]
# get columns 1 through 5 for all rows
df[, 1:5]
# you can also use column names to retrieve
## get the 3rd (pres) column for the first 10 rows
df[1:10, "pres"]
## to assign to a new variable
a <- df [,1:5]
head(a)
## get the first row only
df %>%
slice(1)
## get the 3rd column of the first 10 rows (using column position)
df %>%
slice (1:10) %>%
select (3)
# get columns 1 through 5 for all rows
df %>%
select (1:5)
# using column names (the more widely used method)
## get the 3rd (pres) column for the first 10 rows
df %>%
slice (1:10) %>%
select (pres)
# multiple columns
df %>%
slice (1:10) %>%
select (preg, pres, class)
# assignment works the same way
a <- df %>%
slice (1:10) %>%
select (preg, pres, class)
df %>%
filter(age > 39 & preg > 2)
## you can assign this to another data frame
mydf <- df %>%
filter(age > 39 & preg > 2)
head(mydf)
## Find the mean of a column
mean(df$preg) # mean number of pregnancies
sd (df$preg) # standard deviation
quantile (df$preg)
## doing it across mulitple columns
df %>%
summarize(mean_preg = mean (preg),
mean_plas = mean (plas),
mean_pres = mean (pres))
mydf %>%
select (everything()) %>%
summarise_all(funs(sum(is.na(.))))
nh_df <- readRDS ("~/Downloads/small_subset.rds")
df %>%
filter(age > 39 & preg > 2)
## you can assign this to another data frame
mydf <- df %>%
filter(age > 39 & preg > 2)
head(mydf)
"Hello world"
## Find the mean of a column
mean(df$preg) # mean number of pregnancies
sd (df$preg) # standard deviation
quantile (df$preg)
## doing it across mulitple columns
df %>%
summarize(mean_preg = mean (preg),
mean_plas = mean (plas),
mean_pres = mean (pres))
## Find the mean of a column
mean(df$preg) # mean number of pregnancies
sd (df$preg) # standard deviation
quantile (df$preg)
## doing it across mulitple columns
df %>%
summarize(mean_preg = mean (preg),
mean_plas = mean (plas),
mean_pres = mean (pres))
"Hello world"
mydf %>%
select (everything()) %>%
summarise_all(funs(sum(is.na(.))))
nh_df <- readRDS ("~/Downloads/small_subset.rds")
nh_df <- readRDS ("~/Downloads/small_subset.rds")
nh_df <- readRDS ("~/Downloads/small_subset")
nh_df <- readRDS ("~/Downloads/small_subset.rds")
mydf %>%
select (everything()) %>%
summarise_all(funs(sum(is.na(.))))
mydf %>%
select (everything(), na.rm=True) %>%
summarise_all(funs(sum(is.na(.))))
mydf %>%
select (everything(), na.rm=True) %>%
summarise_all(funs(sum(is.na(.))))
mydf %>%
select (everything(), na.rm=TRUE) %>%
summarise_all(funs(sum(is.na(.))))
mydf %>%
select (everything()) %>%
summarise_all(funs(sum(is.na(.))), na.rm=TRUE)
mydf %>%
select (everything()) %>%
summarise_all(funs(sum(is.na(.))), na.rm=TRUE)
mydf %>%
select (everything()) %>%
summarise_all(funs(sum(is.na(.))))
na.omit(mydf) %>%
select (everything()) %>%
summarise_all(funs(sum(is.na(.))))
na.omit(mydf) %>%
select (everything()) %>%
summarise_all(funs(sum(is.na(.))))
nh_df <- readRDS ("~/Downloads/small_subset.rds")
nh_df <- readRDS ("/Users/admin/Downloads/small_subset.rds")
nrow(nh_df)
ncol(nh_df)
## Find the mean of a column
mean(nh_df$BMXBMI, na.rm=TRUE) # mean number of pregnancies
sd (nh_df$BMXBMI, na.rm=TRUE) # standard deviation
quantile (nh_df$BMXBMI, na.rm=TRUE)
## doing it across mulitple columns
df %>%
summarize(mean_bmi = mean (BMXBMI, na.rm =TRUE),
mean_age = mean (RIDAGEYR, na.rm=TRUE))
nh_df %>%
select (everything()) %>%
summarise_all(funs(sum(is.na(.))))
## Find the mean of a column
mean(nh_df$BMXBMI, na.rm=TRUE) # mean number of pregnancies
sd (nh_df$BMXBMI, na.rm=TRUE) # standard deviation
quantile (nh_df$BMXBMI, na.rm=TRUE)
## doing it across mulitple columns
df %>%
summarize(mean_bmi = mean (BMXBMI, na.rm =TRUE),
mean_age = mean (RIDAGEYR, na.rm=TRUE))
## Find the mean of a column
mean(nh_df[BMXBMI], na.rm=TRUE) # mean number of pregnancies
## Find the mean of a column
mean(nh_df$BMXBMI, na.rm=TRUE) # mean number of pregnancies
sd (nh_df$BMXBMI, na.rm=TRUE) # standard deviation
quantile (nh_df$BMXBMI, na.rm=TRUE)
## doing it across mulitple columns
df %>%
summarize(mean_bmi = mean (BMXBMI, na.rm =TRUE),
mean_age = mean (RIDAGEYR, na.rm=TRUE))
## Find the mean of a column
mean(nh_df$BMXBMI, na.rm=TRUE) # mean number of pregnancies
sd (nh_df$BMXBMI, na.rm=TRUE) # standard deviation
quantile (nh_df$BMXBMI, na.rm=TRUE)
## doing it across mulitple columns
df %>%
summarize(mean_bmi = mean (nh_df$BMXBMI, na.rm =TRUE),
mean_age = mean (nh_df$RIDAGEYR, na.rm=TRUE))
## Find the mean of a column
mean(nh_df$BMXBMI, na.rm=TRUE) # mean number of pregnancies
sd (nh_df$BMXBMI, na.rm=TRUE) # standard deviation
quantile (nh_df$BMXBMI, na.rm=TRUE)
## doing it across mulitple columns
nd_df %>%
summarize(mean_bmi = mean (nh_df$BMXBMI, na.rm =TRUE),
mean_age = mean (nh_df$RIDAGEYR, na.rm=TRUE))
## Find the mean of a column
mean(nh_df$BMXBMI, na.rm=TRUE) # mean number of pregnancies
sd (nh_df$BMXBMI, na.rm=TRUE) # standard deviation
quantile (nh_df$BMXBMI, na.rm=TRUE)
## doing it across mulitple columns
nh_df %>%
summarize(mean_bmi = mean (nh_df$BMXBMI, na.rm =TRUE),
mean_age = mean (nh_df$RIDAGEYR, na.rm=TRUE))
## Find the mean of a column
mean(nh_df$BMXBMI, na.rm=TRUE) # mean number of pregnancies
sd (nh_df$BMXBMI, na.rm=TRUE) # standard deviation
quantile (nh_df$BMXBMI, na.rm=TRUE)
## doing it across mulitple columns
nh_df %>%
summarize(mean_bmi = mean (BMXBMI, na.rm =TRUE),
mean_age = mean (nh_df$RIDAGEYR, na.rm=TRUE))
## Find the mean of a column
mean(nh_df$BMXBMI, na.rm=TRUE) # mean number of pregnancies
sd (nh_df$BMXBMI, na.rm=TRUE) # standard deviation
quantile (nh_df$BMXBMI, na.rm=TRUE)
## doing it across mulitple columns
nh_df %>%
summarize(mean_bmi = mean (BMXBMI, na.rm =TRUE),
mean_age = mean (RIDAGEYR, na.rm=TRUE))
## year of survey, total participants, male, female, min(age), max(age), avg(age)
## load the data
load("/Users/ka20943/Downloads/nhanes_merged_12_2018.Rdata")
